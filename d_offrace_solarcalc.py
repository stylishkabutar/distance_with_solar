import numpy as np
from scipy.integrate import quad
from d_config import PANEL_AREA, PANEL_EFFICIENCY
from d_setting import RACE_START, RACE_END
from d_config import HR

DT = RACE_END - RACE_START
_power_coeff = PANEL_EFFICIENCY * PANEL_AREA

def _calc_solar_irradiance(time):
    return 1073.099 * np.exp(-0.5 * ((time - 43200) / 11600) ** 2)

def calculate_incident_solarpower(globaltime, latitude, longitude):
    # Calculate power generated by solar in the path
    gt = globaltime % DT
    intensity = _calc_solar_irradiance(RACE_START + gt)
    return intensity * _power_coeff / HR

# Helper function to integrate the power over the time interval
def integrand(t):
    intensity = _calc_solar_irradiance( t)
    return intensity * _power_coeff / HR 

def calculate_energy(interval_start, interval_end):
    # Perform the integration over the specified time interval
    energy, _ = quad(integrand, interval_start, interval_end)
    return energy

if __name__ == '__main__':
    # Define the time intervals in seconds (assuming RACE_START is 0 for simplicity)
    interval1_start = 6 * HR  # 6 AM in seconds
    interval1_end = 9 * HR  # 9 AM in seconds
    interval2_start = 17 * HR  # 5 PM in seconds
    interval2_end = 18 * HR  # 6 PM in seconds

    # Calculate the energy for both intervals
    energy_interval1 = calculate_energy(interval1_start, interval1_end)
    energy_interval2 = calculate_energy(interval2_start, interval2_end)

    print(f"Energy generated from 6-8 AM: {energy_interval1} wh")
    print(f"Energy generated from 5-6 PM: {energy_interval2} wh")